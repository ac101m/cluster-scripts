#!/usr/bin/env python3


import argparse
from subprocess import call


# Host names for the nodes
all_nodes = ["FivesACrowd0", "FivesACrowd1", "FivesACrowd2", "FivesACrowd3", "FivesACrowd4"]


def main():

    # Get command line arguments
    parser = argparse.ArgumentParser(description = 'Shutdown nodes in the cluster over ethernet.')
    parser.add_argument('-a', '--all', action = 'store_true', default = False, help = 'Shut down all cluster nodes.')
    parser.add_argument('-n', '--nodes', type = int, nargs = '+', help = 'Shut down the specified nodes in the cluster.')
    parser.add_argument('-c', '--count', type = int, help = 'Wake n nodes in the cluster, in descending order.')
    ARGS = parser.parse_args()

    # List of hosts to wake
    nodes = []

    # Shut down all nodes
    if ARGS.all == True:
        nodes = all_nodes

    # Shut down n nodes
    elif ARGS.nodes != None:
        for node_number in ARGS.nodes:
            if(node_number < len(all_nodes)):
                nodes.append(all_nodes[node_number])
            else:
                print("Node %d out of range, ignoring." % node_number)

    # Shut down listed hosts
    elif ARGS.count != None:
        nodes = all_nodes[-ARGS.count:]

    # Nothing specified
    else:
        print('No nodes specified, nothing to be done.')
        return

    # Form and send the shutdown command
    command = ['parallel-ssh']
    for node in nodes:
        command.append('-H')
        command.append(str(node))
    command.append('sudo shutdown +0')
    call(command)


if __name__ == '__main__':
    main()
